--- Sentencias SQL para la creación del esquema de superAndes
--- Las tablas tienen prefijo A_ para facilitar su acceso desde SQL Developer

-- Creación del secuenciador
create sequence superAndes_sequence;

-- Creaación de la tabla PRODUCTO y especificación de sus restricciones
CREATE TABLE A_PRODUCTO
   (CODIGO_DE_BARRAS VARCHAR(30), 
	ID_PROMOCION INTEGER,
    NOMBRE VARCHAR(30),
    MARCA VARCHAR(30),
    PRECIO_UNITARIO DECIMAL,
    VOLUMEN_EMPAQUETADO DECIMAL,
    PESO DECIMAL,
    PRECIO_UNIDAD_MEDIDA DECIMAL,
    CANTIDAD_PRESENTACION INTEGER,
    UNIDAD_DE_MEDIDA VARCHAR(30),
    PRECIO DECIMAL,
    CATEGORIA VARCHAR(30),
    NIVEL_DE_REORDEN INTEGER,
    NUMERO_FACTURA INTEGER,
    ID_ALMACENAMIENTO INTEGER,
    NIT_PROVEEDOR INTEGER,
	CONSTRAINT A_PRODUCTO_PK PRIMARY KEY (CODIGO_DE_BARRAS)
    );
	
ALTER TABLE A_PRODUCTO
	ADD CONSTRAINT UN_NOMBRE 
	UNIQUE (NOMBRE)
ENABLE;

-- Creaación de la tabla PROMOCION y especificación de sus restricciones
CREATE TABLE A_PROMOCION 
   (ID_PROMOCION INTEGER, 
	NIT_PROVEEDOR NUMBER, 
	TIPO_PROMOCION VARCHAR(30),
    NOMBRE_PROMOCION VARCHAR(30),
    FECHA_INICIAL DATE,
    FECHA_FINAL DATE,
	CONSTRAINT PK_ID_PROMOCION PRIMARY KEY (ID_PROMOCION));
    
	
ALTER TABLE A_PRODUCTO
ADD CONSTRAINT FK_A_PROMOCION
    FOREIGN KEY (ID_PROMOCION)
    REFERENCES A_PROMOCION(ID_PROMOCION)
ENABLE;

-- Creaación de la tabla PROVEEDOR y especificación de sus restricciones
CREATE TABLE A_PROVEEDOR
   (NIT INTEGER, 
	NOMBRE VARCHAR(30), 
	CALIFICACION INTEGER, 
	TIPOPROVEEDOR VARCHAR(30),
    CONSTRAINT CK_RANGO_CALIFICACION CHECK(CALIFICACION <= 10 AND CALIFICACION >= 0),
	CONSTRAINT A_BAR_PK PRIMARY KEY (NIT));
	 
ALTER TABLE A_PRODUCTO
	ADD CONSTRAINT FK_NIT_PROVEEDOR
    FOREIGN KEY (NIT_PROVEEDOR)
    REFERENCES A_PROVEEDOR(NIT)
ENABLE;

ALTER TABLE A_PROMOCION
	ADD CONSTRAINT FK_NIT_PROVEEDOR
    FOREIGN KEY (NIT_PROVEEDOR)
    REFERENCES A_PROVEEDOR(NIT)
ENABLE;

-- Creaación de la tabla PEDIDO y especificación de sus restricciones
CREATE TABLE A_PEDIDO
   (NUMERO_PEDIDO INTEGER, 
	NIT_PROVEEDOR INTEGER, 
	NOMBRE_SUCURSAL VARCHAR(30), 
	DIRECCION_SUCURSAL VARCHAR(30),
    CIUDAD_SUCURSAL VARCHAR(30),
    CODIGO_DE_BARRAS_PRODUCTO VARCHAR(30),
    FECHA_ENTREGA DATE,
    CALIDAD VARCHAR(30),
    CALIFICACION INTEGER,
    PRECIO DECIMAL,
    CANTIDAD_VOLUMEN INTEGER,
    CONSTRAINT CK_CALIFICACION CHECK(CALIFICACION >= 0 AND CALIFICACION <=10),
	CONSTRAINT A_PEDIDO_PK PRIMARY KEY (NUMERO_PEDIDO));

ALTER TABLE A_PEDIDO
	ADD CONSTRAINT FK_PROVEEDOR 
	FOREIGN KEY (NIT_PROVEEDOR)
    REFERENCES A_PROVEEDOR(NIT)
ENABLE;

-- Creaación de la tabla SUCURSAL y especificación de sus restricciones
CREATE TABLE A_SUCURSAL
(
  NOMBRE VARCHAR(30),
  DIRECCION VARCHAR(30),
  CIUDAD VARCHAR(30),
  ID_LOCALVENTAS INTEGER,
  CONSTRAINT A_SUCURSAL_PK PRIMARY KEY (NOMBRE,DIRECCION,CIUDAD));

ALTER TABLE A_PEDIDO
ADD CONSTRAINT FK_A_SUCURSAL
    FOREIGN KEY (NOMBRE_SUCURSAL,DIRECCION_SUCURSAL,CIUDAD_SUCURSAL)
    REFERENCES A_SUCURSAL(NOMBRE,DIRECCION,CIUDAD)
ENABLE;
    
-- Creaación de la tabla LOCAL_VENTAS y especificación de sus restricciones
CREATE TABLE A_LOCAL_VENTAS
(
  ID_LOCALVENTAS INTEGER,
  INGRESOS INTEGER, 
  CONSTRAINT A_ID_LOCALVENTAS_PK PRIMARY KEY (ID_LOCALVENTAS));

ALTER TABLE A_SUCURSAL
ADD CONSTRAINT FK_A_LOCAL_VENTAS
    FOREIGN KEY (ID_LOCALVENTAS)
    REFERENCES A_LOCAL_VENTAS(ID_LOCALVENTAS)
ENABLE;
    

-- Creaación de la tabla ALMACENAMIENTO y especificación de sus restricciones
CREATE TABLE A_ALMACENAMIENTO 
(
  ID_ALMACENAMIENTO INTEGER,
  ID_ALMACENAMIENTO_CATEGORIA INTEGER,
  CAPACIDAD_VOLUMEN DECIMAL, 
  CAPACIDAD_PESO DECIMAL,
  CANTIDAD_PRODUCTOS INTEGER,
  SUCURSAL_NOMBRE VARCHAR(30),
  SUCURSAL_DIRECCION VARCHAR(30),
  SUCURSAL_CIUDAD VARCHAR(30),
  CONSTRAINT ID_ALMACENAMIENTO_PK PRIMARY KEY (ID_ALMACENAMIENTO));

CREATE TABLE A_BODEGA
(
    ID_ALMACENAMIENTO INTEGER,
    NOMBRE_BODEGA VARCHAR(30),
    CONSTRAINT FK_ID_ALM_BODEGA FOREIGN KEY (ID_ALMACENAMIENTO)
    REFERENCES A_ALMACENAMIENTO (ID_ALMACENAMIENTO));
    
CREATE TABLE A_ESTANTE
(
    IDALMACENAMIENTO INTEGER,
    NOMBRE_ESTANTE VARCHAR(30),
    TIPO_ESTANTE VARCHAR(30),
    NIVEL_ABASTECIMIENTO DECIMAL,
    CONSTRAINT FK_ID_ALM_ESTANTE FOREIGN KEY (IDALMACENAMIENTO)
    REFERENCES A_ALMACENAMIENTO (ID_ALMACENAMIENTO));

CREATE TABLE A_FACTURA
(
    NUMERO_FACTURA INTEGER,
    FECHA_COMPRA DATE,
    VALOR_BASE DECIMAL,
    DESCUENTO DECIMAL,
    IVA DECIMAL,
    VALOR_TOTAL DECIMAL,
    SUCURSAL_NOMBRE VARCHAR(30),
    SUCURSAL_DIRECCION VARCHAR(30),
    SUCURSAL_CIUDAD VARCHAR(30),
    CORREO_CLIENTE VARCHAR(30),
    CONSTRAINT PK_NUMERO_FACTURA PRIMARY KEY(NUMERO_FACTURA),
    CONSTRAINT FK_SUCURSAL FOREIGN KEY (SUCURSAL_NOMBRE,SUCURSAL_DIRECCION,SUCURSAL_CIUDAD)
    REFERENCES A_SUCURSAL(NOMBRE,DIRECCION,CIUDAD));
    
CREATE TABLE A_CLIENTE
(
    CORREO VARCHAR(30),
    NOMBRE VARCHAR(30),
    PUNTOS_FIDELIZACION INTEGER);

ALTER TABLE A_CLIENTE
ADD CONSTRAINT PK_CLIENTE PRIMARY KEY(CORREO)
ENABLE;

ALTER TABLE A_FACTURA
ADD CONSTRAINT FK_CORREO_CLIENTE FOREIGN KEY(CORREO_CLIENTE)
REFERENCES A_CLIENTE(CORREO)
ENABLE;

CREATE TABLE A_EMPRESA
(
    NIT INTEGER,
    DIRECCION VARCHAR(30),
    CORREO_CLIENTE VARCHAR(30),
    CONSTRAINT FK_CLIENTE FOREIGN KEY (CORREO_CLIENTE)
    REFERENCES A_CLIENTE (CORREO),
    CONSTRAINT PK_NIT PRIMARY KEY(NIT));
    
CREATE TABLE A_PERSONANATURAL
(
    TIPO_IDENTIFICACION VARCHAR(30),
    NUMERO_IDENTIFICACION VARCHAR(15),
    CORREO_CLIENTE VARCHAR(30),
    CONSTRAINT FK_CLIENTE_NATURAL FOREIGN KEY (CORREO_CLIENTE)
    REFERENCES A_CLIENTE (CORREO),
    CONSTRAINT PK_NUMID PRIMARY KEY(NUMERO_IDENTIFICACION));
COMMIT;
